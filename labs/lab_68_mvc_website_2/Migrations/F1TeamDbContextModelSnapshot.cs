// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab_68_mvc_website_2.Models;

namespace lab_68_mvc_website_2.Migrations
{
    [DbContext(typeof(F1TeamDbContext))]
    partial class F1TeamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicalID")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.HasIndex("TeamID");

                    b.HasIndex("TechnicalID");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarID = 1,
                            CarName = "SF1000",
                            TeamID = 1
                        });
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Driver", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarID")
                        .HasColumnType("int");

                    b.Property<int>("ContractLength")
                        .HasColumnType("int");

                    b.Property<string>("DriverRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("DriverID");

                    b.HasIndex("CarID");

                    b.HasIndex("TeamID");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            DriverID = 1,
                            ContractLength = 2,
                            DriverRole = "First",
                            Name = "Sebastian Vettel",
                            TeamID = 1
                        });
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Principle", b =>
                {
                    b.Property<int>("PrincipleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrincipleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StrategyPlan")
                        .HasColumnType("int");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicalID")
                        .HasColumnType("int");

                    b.HasKey("PrincipleID");

                    b.HasIndex("TeamID");

                    b.HasIndex("TechnicalID");

                    b.ToTable("Principles");

                    b.HasData(
                        new
                        {
                            PrincipleID = 1,
                            PrincipleName = "Mattia Binotto",
                            StrategyPlan = 1,
                            TeamID = 1
                        });
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TeamBudget")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamID = 1,
                            TeamBudget = 250000000,
                            TeamName = "Scuderia Ferrari"
                        },
                        new
                        {
                            TeamID = 2,
                            TeamBudget = 200500000,
                            TeamName = "Mercedes"
                        });
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Technical", b =>
                {
                    b.Property<int>("TechnicalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AeroRating")
                        .HasColumnType("int");

                    b.Property<int>("ChassisRating")
                        .HasColumnType("int");

                    b.Property<string>("EngineSupplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalDirector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicalID");

                    b.HasIndex("TeamID");

                    b.ToTable("Technicals");

                    b.HasData(
                        new
                        {
                            TechnicalID = 1,
                            AeroRating = 8,
                            ChassisRating = 7,
                            EngineSupplier = "Ferrari",
                            TechnicalDirector = "James Allison"
                        });
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Car", b =>
                {
                    b.HasOne("lab_68_mvc_website_2.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");

                    b.HasOne("lab_68_mvc_website_2.Models.Technical", "Technical")
                        .WithMany()
                        .HasForeignKey("TechnicalID");
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Driver", b =>
                {
                    b.HasOne("lab_68_mvc_website_2.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarID");

                    b.HasOne("lab_68_mvc_website_2.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Principle", b =>
                {
                    b.HasOne("lab_68_mvc_website_2.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");

                    b.HasOne("lab_68_mvc_website_2.Models.Technical", "Technical")
                        .WithMany()
                        .HasForeignKey("TechnicalID");
                });

            modelBuilder.Entity("lab_68_mvc_website_2.Models.Technical", b =>
                {
                    b.HasOne("lab_68_mvc_website_2.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");
                });
#pragma warning restore 612, 618
        }
    }
}
