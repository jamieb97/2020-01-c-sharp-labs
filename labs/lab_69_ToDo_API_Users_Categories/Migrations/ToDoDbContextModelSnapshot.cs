// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab_69_ToDo_API_Users_Categories.Models;

namespace lab_69_ToDo_API_Users_Categories.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    partial class ToDoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("lab_69_ToDo_API_Users_Categories.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("lab_69_ToDo_API_Users_Categories.Models.ToDo", b =>
                {
                    b.Property<int>("ToDoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ToDoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ToDoID");

                    b.HasIndex("UserID");

                    b.ToTable("ToDos");

                    b.HasData(
                        new
                        {
                            ToDoID = 1,
                            ToDoName = "Do This"
                        },
                        new
                        {
                            ToDoID = 2,
                            ToDoName = "And do this"
                        },
                        new
                        {
                            ToDoID = 3,
                            ToDoName = "Also do this"
                        });
                });

            modelBuilder.Entity("lab_69_ToDo_API_Users_Categories.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            UserName = "Jamie"
                        },
                        new
                        {
                            UserID = 2,
                            UserName = "Karim"
                        },
                        new
                        {
                            UserID = 3,
                            UserName = "Tim"
                        });
                });

            modelBuilder.Entity("lab_69_ToDo_API_Users_Categories.Models.ToDo", b =>
                {
                    b.HasOne("lab_69_ToDo_API_Users_Categories.Models.User", "User")
                        .WithMany("ToDos")
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
