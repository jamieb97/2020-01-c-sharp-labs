// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab_65_Football_API.Models;

namespace lab_65_Football_API.Migrations
{
    [DbContext(typeof(FootballDbContext))]
    [Migration("20200302222037_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("lab_65_Football_API.Models.Agent", b =>
                {
                    b.Property<int>("AgentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgentFee")
                        .HasColumnType("int");

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("HeadStaffID")
                        .HasColumnType("int");

                    b.Property<int?>("PercentOwned")
                        .HasColumnType("int");

                    b.HasKey("AgentID");

                    b.HasIndex("HeadStaffID");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            AgentID = 1,
                            AgentFee = 30,
                            AgentName = "Mino Railo",
                            PercentOwned = 5
                        },
                        new
                        {
                            AgentID = 2,
                            AgentFee = 25,
                            AgentName = "Mendes",
                            PercentOwned = 10
                        });
                });

            modelBuilder.Entity("lab_65_Football_API.Models.HeadStaff", b =>
                {
                    b.Property<int>("HeadStaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OwnerID")
                        .HasColumnType("int");

                    b.Property<int?>("ScoutID")
                        .HasColumnType("int");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HeadStaffID");

                    b.HasIndex("OwnerID");

                    b.HasIndex("ScoutID");

                    b.ToTable("HeadStaffs");
                });

            modelBuilder.Entity("lab_65_Football_API.Models.Owner", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NetWorth")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OwnerID");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("lab_65_Football_API.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("AgentID")
                        .HasColumnType("int");

                    b.Property<int>("ContractLength")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerID")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.HasIndex("AgentID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerID = 1,
                            Age = 25,
                            AgentID = 2,
                            ContractLength = 5,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerName = "Neymar",
                            Salary = 450000
                        },
                        new
                        {
                            PlayerID = 2,
                            Age = 26,
                            AgentID = 1,
                            ContractLength = 3,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlayerName = "Pogba",
                            Salary = 300000
                        });
                });

            modelBuilder.Entity("lab_65_Football_API.Models.Scout", b =>
                {
                    b.Property<int>("ScoutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryBased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.Property<string>("ScoutName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffAmount")
                        .HasColumnType("int");

                    b.HasKey("ScoutID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Scouts");
                });

            modelBuilder.Entity("lab_65_Football_API.Models.Agent", b =>
                {
                    b.HasOne("lab_65_Football_API.Models.HeadStaff", "HeadStaff")
                        .WithMany()
                        .HasForeignKey("HeadStaffID");
                });

            modelBuilder.Entity("lab_65_Football_API.Models.HeadStaff", b =>
                {
                    b.HasOne("lab_65_Football_API.Models.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");

                    b.HasOne("lab_65_Football_API.Models.Scout", "Scout")
                        .WithMany()
                        .HasForeignKey("ScoutID");
                });

            modelBuilder.Entity("lab_65_Football_API.Models.Player", b =>
                {
                    b.HasOne("lab_65_Football_API.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentID");

                    b.HasOne("lab_65_Football_API.Models.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");
                });

            modelBuilder.Entity("lab_65_Football_API.Models.Scout", b =>
                {
                    b.HasOne("lab_65_Football_API.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
